syntax = "proto3";

package tictactoe;

option go_package = "github.com/dibikhin/tic-tac-toe-web-go/api";

service Game {
  rpc RunCommand (CommandRequest) returns (StatusReply);
  rpc RunQuery (QueryRequest) returns (StatusReply);
}

message CommandRequest {
  Actions action = 1;
}

message QueryRequest {
  Querys query = 1;
  string boardId = 2;
  string key = 3;
}

/*

TODO: Fill example

*/
message StatusReply {
  reserved 10 to 15;

  Is state = 1;
  repeated Actions actions = 2;
  repeated Opts opts = 3;
  string message = 4; // TODO: remove

  For for = 5; // optional
  Player player = 6; // optional
  string board = 7; // optional

  Outcome outcome = 8; // optional

  bool isFilled = 9; // optional

  repeated Querys querys = 16;
}

message Player {
  int32 num = 1;
  string mark = 2;
}

enum Querys {
  EMPTY = 0;
  IS_FILLED = 1;
  GET_STATUS = 2;
}

// State
enum Is {
  UNDEFINED = 0; // safe default
  WAITING = 1;
  IDLE = 2;
  GAME_OVER = 3;
}

enum For {
  NOTHING = 0; // safe default
  AUTH = 1;
  MARK = 2;
  TURN = 3;
}

enum Actions {
  NOOP = 0; // safe default
  START_GAME = 2;
  LOG_IN = 3;
  SET_MARK = 4;
  DO_TURN = 5;
  STOP_GAME = 6;
}

enum Opts {
  ZERO = 0; // safe default

  ONE = 1;
  TWO = 2;
  THREE = 3;
  FOUR = 4;
  FIVE = 5;
  SIX = 6;
  SEVEN = 7;
  EIGHT = 8;
  NINE = 9;
}

enum Outcome {
  DEFAULT = 0; // safe default
  WON = 1;
  DRAW = 2;
}
