// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: api/tictactoe.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Querys int32

const (
	Querys_EMPTY     Querys = 0
	Querys_IS_FILLED Querys = 1
)

// Enum value maps for Querys.
var (
	Querys_name = map[int32]string{
		0: "EMPTY",
		1: "IS_FILLED",
	}
	Querys_value = map[string]int32{
		"EMPTY":     0,
		"IS_FILLED": 1,
	}
)

func (x Querys) Enum() *Querys {
	p := new(Querys)
	*p = x
	return p
}

func (x Querys) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Querys) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tictactoe_proto_enumTypes[0].Descriptor()
}

func (Querys) Type() protoreflect.EnumType {
	return &file_api_tictactoe_proto_enumTypes[0]
}

func (x Querys) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Querys.Descriptor instead.
func (Querys) EnumDescriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	State_UNDEFINED State = 0 // safe default
	State_WAITING   State = 1
	State_IDLE      State = 2
	State_GAME_OVER State = 3
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "UNDEFINED",
		1: "WAITING",
		2: "IDLE",
		3: "GAME_OVER",
	}
	State_value = map[string]int32{
		"UNDEFINED": 0,
		"WAITING":   1,
		"IDLE":      2,
		"GAME_OVER": 3,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tictactoe_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_api_tictactoe_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{1}
}

type For int32

const (
	For_NOTHING For = 0 // safe default
	For_AUTH    For = 1
	For_MARK    For = 2
	For_TURN    For = 3
)

// Enum value maps for For.
var (
	For_name = map[int32]string{
		0: "NOTHING",
		1: "AUTH",
		2: "MARK",
		3: "TURN",
	}
	For_value = map[string]int32{
		"NOTHING": 0,
		"AUTH":    1,
		"MARK":    2,
		"TURN":    3,
	}
)

func (x For) Enum() *For {
	p := new(For)
	*p = x
	return p
}

func (x For) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (For) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tictactoe_proto_enumTypes[2].Descriptor()
}

func (For) Type() protoreflect.EnumType {
	return &file_api_tictactoe_proto_enumTypes[2]
}

func (x For) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use For.Descriptor instead.
func (For) EnumDescriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{2}
}

type Actions int32

const (
	Actions_NOOP       Actions = 0 // safe default
	Actions_GET_STATUS Actions = 1
	Actions_START_GAME Actions = 2
	Actions_LOG_IN     Actions = 3
	Actions_SET_MARK   Actions = 4
	Actions_DO_TURN    Actions = 5
	Actions_STOP_GAME  Actions = 6
)

// Enum value maps for Actions.
var (
	Actions_name = map[int32]string{
		0: "NOOP",
		1: "GET_STATUS",
		2: "START_GAME",
		3: "LOG_IN",
		4: "SET_MARK",
		5: "DO_TURN",
		6: "STOP_GAME",
	}
	Actions_value = map[string]int32{
		"NOOP":       0,
		"GET_STATUS": 1,
		"START_GAME": 2,
		"LOG_IN":     3,
		"SET_MARK":   4,
		"DO_TURN":    5,
		"STOP_GAME":  6,
	}
)

func (x Actions) Enum() *Actions {
	p := new(Actions)
	*p = x
	return p
}

func (x Actions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Actions) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tictactoe_proto_enumTypes[3].Descriptor()
}

func (Actions) Type() protoreflect.EnumType {
	return &file_api_tictactoe_proto_enumTypes[3]
}

func (x Actions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Actions.Descriptor instead.
func (Actions) EnumDescriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{3}
}

type Opts int32

const (
	Opts_ZERO  Opts = 0 // safe default
	Opts_ONE   Opts = 1
	Opts_TWO   Opts = 2
	Opts_THREE Opts = 3
	Opts_FOUR  Opts = 4
	Opts_FIVE  Opts = 5
	Opts_SIX   Opts = 6
	Opts_SEVEN Opts = 7
	Opts_EIGHT Opts = 8
	Opts_NINE  Opts = 9
)

// Enum value maps for Opts.
var (
	Opts_name = map[int32]string{
		0: "ZERO",
		1: "ONE",
		2: "TWO",
		3: "THREE",
		4: "FOUR",
		5: "FIVE",
		6: "SIX",
		7: "SEVEN",
		8: "EIGHT",
		9: "NINE",
	}
	Opts_value = map[string]int32{
		"ZERO":  0,
		"ONE":   1,
		"TWO":   2,
		"THREE": 3,
		"FOUR":  4,
		"FIVE":  5,
		"SIX":   6,
		"SEVEN": 7,
		"EIGHT": 8,
		"NINE":  9,
	}
)

func (x Opts) Enum() *Opts {
	p := new(Opts)
	*p = x
	return p
}

func (x Opts) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Opts) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tictactoe_proto_enumTypes[4].Descriptor()
}

func (Opts) Type() protoreflect.EnumType {
	return &file_api_tictactoe_proto_enumTypes[4]
}

func (x Opts) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Opts.Descriptor instead.
func (Opts) EnumDescriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{4}
}

type Outcome int32

const (
	Outcome_DEFAULT Outcome = 0 // safe default
	Outcome_WON     Outcome = 1
	Outcome_DRAW    Outcome = 2
)

// Enum value maps for Outcome.
var (
	Outcome_name = map[int32]string{
		0: "DEFAULT",
		1: "WON",
		2: "DRAW",
	}
	Outcome_value = map[string]int32{
		"DEFAULT": 0,
		"WON":     1,
		"DRAW":    2,
	}
)

func (x Outcome) Enum() *Outcome {
	p := new(Outcome)
	*p = x
	return p
}

func (x Outcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Outcome) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tictactoe_proto_enumTypes[5].Descriptor()
}

func (Outcome) Type() protoreflect.EnumType {
	return &file_api_tictactoe_proto_enumTypes[5]
}

func (x Outcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Outcome.Descriptor instead.
func (Outcome) EnumDescriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{5}
}

type CommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Actions `protobuf:"varint,1,opt,name=action,proto3,enum=tictactoe.Actions" json:"action,omitempty"`
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tictactoe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tictactoe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{0}
}

func (x *CommandRequest) GetAction() Actions {
	if x != nil {
		return x.Action
	}
	return Actions_NOOP
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query Querys `protobuf:"varint,1,opt,name=query,proto3,enum=tictactoe.Querys" json:"query,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tictactoe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tictactoe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{1}
}

func (x *QueryRequest) GetQuery() Querys {
	if x != nil {
		return x.Query
	}
	return Querys_EMPTY
}

//
//
//TODO: Fill example
//
type StatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    State     `protobuf:"varint,1,opt,name=state,proto3,enum=tictactoe.State" json:"state,omitempty"`
	Actions  []Actions `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=tictactoe.Actions" json:"actions,omitempty"`
	Opts     []Opts    `protobuf:"varint,3,rep,packed,name=opts,proto3,enum=tictactoe.Opts" json:"opts,omitempty"`
	Message  string    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	For      For       `protobuf:"varint,5,opt,name=for,proto3,enum=tictactoe.For" json:"for,omitempty"`             // optional
	Player   *Player   `protobuf:"bytes,6,opt,name=player,proto3" json:"player,omitempty"`                           // optional
	Board    string    `protobuf:"bytes,7,opt,name=board,proto3" json:"board,omitempty"`                             // optional
	Outcome  Outcome   `protobuf:"varint,8,opt,name=outcome,proto3,enum=tictactoe.Outcome" json:"outcome,omitempty"` // optional
	IsFilled bool      `protobuf:"varint,9,opt,name=isFilled,proto3" json:"isFilled,omitempty"`                      // optional
}

func (x *StatusReply) Reset() {
	*x = StatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tictactoe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReply) ProtoMessage() {}

func (x *StatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_tictactoe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReply.ProtoReflect.Descriptor instead.
func (*StatusReply) Descriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{2}
}

func (x *StatusReply) GetState() State {
	if x != nil {
		return x.State
	}
	return State_UNDEFINED
}

func (x *StatusReply) GetActions() []Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *StatusReply) GetOpts() []Opts {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *StatusReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusReply) GetFor() For {
	if x != nil {
		return x.For
	}
	return For_NOTHING
}

func (x *StatusReply) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *StatusReply) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *StatusReply) GetOutcome() Outcome {
	if x != nil {
		return x.Outcome
	}
	return Outcome_DEFAULT
}

func (x *StatusReply) GetIsFilled() bool {
	if x != nil {
		return x.IsFilled
	}
	return false
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num  int32  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Mark string `protobuf:"bytes,2,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tictactoe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_api_tictactoe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_api_tictactoe_proto_rawDescGZIP(), []int{3}
}

func (x *Player) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Player) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

var File_api_tictactoe_proto protoreflect.FileDescriptor

var file_api_tictactoe_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65,
	0x22, 0x3c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37,
	0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x73,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xd5, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74,
	0x6f, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2c, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a,
	0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x69,
	0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x04, 0x6f, 0x70,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x03,
	0x66, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x63, 0x74,
	0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x12, 0x29,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x2c, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x10, 0x22,
	0x2e, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x2a,
	0x22, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x72, 0x79, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x50,
	0x54, 0x59, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x10,
	0x03, 0x2a, 0x30, 0x0a, 0x03, 0x46, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x48,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x48, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x41, 0x52, 0x4b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x55, 0x52,
	0x4e, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x45, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x47, 0x5f,
	0x49, 0x4e, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x4b,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x4f, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x06, 0x2a, 0x6a,
	0x0a, 0x04, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x57, 0x4f,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x56, 0x45, 0x10,
	0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x49, 0x58, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45,
	0x56, 0x45, 0x4e, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x08,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x49, 0x4e, 0x45, 0x10, 0x09, 0x2a, 0x29, 0x0a, 0x07, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x52, 0x41, 0x57, 0x10, 0x02, 0x32, 0x84, 0x01, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x74,
	0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63,
	0x74, 0x6f, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3b, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x74, 0x69,
	0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x62, 0x69, 0x6b,
	0x68, 0x69, 0x6e, 0x2f, 0x74, 0x69, 0x63, 0x2d, 0x74, 0x61, 0x63, 0x2d, 0x74, 0x6f, 0x65, 0x2d,
	0x77, 0x65, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_tictactoe_proto_rawDescOnce sync.Once
	file_api_tictactoe_proto_rawDescData = file_api_tictactoe_proto_rawDesc
)

func file_api_tictactoe_proto_rawDescGZIP() []byte {
	file_api_tictactoe_proto_rawDescOnce.Do(func() {
		file_api_tictactoe_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tictactoe_proto_rawDescData)
	})
	return file_api_tictactoe_proto_rawDescData
}

var file_api_tictactoe_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_tictactoe_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_tictactoe_proto_goTypes = []interface{}{
	(Querys)(0),            // 0: tictactoe.Querys
	(State)(0),             // 1: tictactoe.State
	(For)(0),               // 2: tictactoe.For
	(Actions)(0),           // 3: tictactoe.Actions
	(Opts)(0),              // 4: tictactoe.Opts
	(Outcome)(0),           // 5: tictactoe.Outcome
	(*CommandRequest)(nil), // 6: tictactoe.CommandRequest
	(*QueryRequest)(nil),   // 7: tictactoe.QueryRequest
	(*StatusReply)(nil),    // 8: tictactoe.StatusReply
	(*Player)(nil),         // 9: tictactoe.Player
}
var file_api_tictactoe_proto_depIdxs = []int32{
	3,  // 0: tictactoe.CommandRequest.action:type_name -> tictactoe.Actions
	0,  // 1: tictactoe.QueryRequest.query:type_name -> tictactoe.Querys
	1,  // 2: tictactoe.StatusReply.state:type_name -> tictactoe.State
	3,  // 3: tictactoe.StatusReply.actions:type_name -> tictactoe.Actions
	4,  // 4: tictactoe.StatusReply.opts:type_name -> tictactoe.Opts
	2,  // 5: tictactoe.StatusReply.for:type_name -> tictactoe.For
	9,  // 6: tictactoe.StatusReply.player:type_name -> tictactoe.Player
	5,  // 7: tictactoe.StatusReply.outcome:type_name -> tictactoe.Outcome
	6,  // 8: tictactoe.Game.RunCommand:input_type -> tictactoe.CommandRequest
	7,  // 9: tictactoe.Game.RunQuery:input_type -> tictactoe.QueryRequest
	8,  // 10: tictactoe.Game.RunCommand:output_type -> tictactoe.StatusReply
	8,  // 11: tictactoe.Game.RunQuery:output_type -> tictactoe.StatusReply
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_tictactoe_proto_init() }
func file_api_tictactoe_proto_init() {
	if File_api_tictactoe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_tictactoe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tictactoe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tictactoe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tictactoe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tictactoe_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tictactoe_proto_goTypes,
		DependencyIndexes: file_api_tictactoe_proto_depIdxs,
		EnumInfos:         file_api_tictactoe_proto_enumTypes,
		MessageInfos:      file_api_tictactoe_proto_msgTypes,
	}.Build()
	File_api_tictactoe_proto = out.File
	file_api_tictactoe_proto_rawDesc = nil
	file_api_tictactoe_proto_goTypes = nil
	file_api_tictactoe_proto_depIdxs = nil
}
